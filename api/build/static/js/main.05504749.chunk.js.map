{"version":3,"sources":["@Utils/MyUtils.js","app/pages/auth/auth.routeConfig.js","app/auth/authRoles.js","app/pages/account/account.routeConfig.js","app/pages/admin/admin.routeConfig.js","app/configs/routesConfig.js","app/pages/publicPage/public.routerConfig.js","app/auth/store/reducers/user.reducer.js","app/components/notifications/alert.reducer.js","app/store/reducers/product.reducer.js","app/store/reducers/brand.reducer.js","app/store/reducers/rootReducer.js","app/store/index.js","app/components/notifications/alertNotifi.js","app/auth/Auth.js","app/auth/SisGAuthorization.js","app/App.js","serviceWorker.js","index.js","app/auth/store/actions/user.actions.js","app/store/actions/product.action.js","app/store/actions/brand.action.js","app/components/notifications/alert.actions.js","app/AppContext.js","app/components/Progress/loadingCircle.jsx","app/services/baseService.js"],"names":["MyUtils","config","routes","settings","auth","map","route","configs","allRoutes","forEach","setRoutes","AuthRouterConfig","layout","path","component","React","lazy","authRoles","admin","user","AccountRouterConfig","AdminRouterConfig","routeConfigs","generateRoutesFromConfigs","exact","to","initialState","loadingLogin","userLogin","errorLogin","loadingRegister","userRegister","errorRegister","loadingConfirm","userConfirm","errorConfirm","listUser","loadingListUser","errorListUser","userReducer","state","type","payload","authConstant","LIST_USERS","loading","data","error","LOGOUT_REQUEST","localStorage","removeItem","LOGIN_REQUEST","baseService","setHeaders","JSON","stringify","accessToken","setItem","role","REFRESH_REQUEST","REGISTER_REQUEST","UPDATEUSER_REQUEST","loadingUpdateUser","userUpdated","errorUpdated","DELETEUSER_REQUEST","loadingDeleteUser","userDeleted","errorDeleted","CONFIRM_REQUEST","CONFIRM_SUCCESS","CONFIRM_FAILURE","alertReducer","action","alertConstants","SUCCESS","message","title","INFORMATION","WARNING","ERROR","CLEAR","loadingCreateProd","created","listCarProduct","productReducer","productConstant","LOADDATA_REQUEST","loadingData","loadData","errorData","LOADDATA_RESPONSE","CREATEPROD_REQUEST","CREATEPROD_RESPONSE","errorList","LOADPRODUCT_REQUEST","loadingList","dataList","listProd","DELETEPRODUCT_CAR_REQUEST","ADDPRODUCT_CAR_REQUEST","exist","index","console","log","filter","item","_id","number","cant","slice","Object","assign","brandReducer","brandConstant","LIST_BRAND","listBrand","ADD_BRAND","loadingInsertBrand","brandInserted","insertError","UPDATE_BRAND","DELETE_BRAND","loadingDeleteBrand","brandDeleted","deleteError","combineReducers","authReducers","loggerMiddleware","createLogger","store","createStore","rootReducer","applyMiddleware","thunkMiddleware","promiseMiddleware","variantIcon","success","CheckCircleIcon","warning","WarningIcon","ErrorIcon","info","InfoIcon","MySnackbarContentWrapper","withStyles","theme","backgroundColor","green","red","blue","yellow","icon","fontSize","iconVariant","opacity","marginRight","display","alignItems","props","classes","className","onClose","variant","other","Icon","SnackbarContent","aria-describedby","Fragment","Grid","container","direction","justify","xs","style","fontStyle","id","minWidth","maxWidth","IconButton","key","aria-label","color","close","onClick","CustomizedSnackbars","handleClose","event","reason","clearNotifications","Snackbar","anchorOrigin","vertical","horizontal","open","this","autoHideDuration","typeMessage","customMessage","Component","Auth","jwtCheck","tokenStorage","parse","getItem","userStorage","handleRefreshToken","children","notifications","connect","dispatch","alertActions","clear","token","userActions","RefreshToken","SisGAuthorization","context","accessGranted","redirectRoute","nextProps","nextState","location","history","pathname","redirectUrl","push","matched","matchRoutes","roleUser","length","includes","contextType","AppContext","withRouter","hist","createBrowserHistory","App","Provider","value","fallback","generalCenter","renderRoutes","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","LoginUser","GW","post","Logout","RegisterUser","createAccount","email","password","userName","DeleteUser","dataID","delete","ListUsers","UpdateUser","put","ConfirmAccount","failure","toString","get","DELETE_REQUEST","DELETE_RESPONSE","PURCHASE_REQUEST","productActions","CreateProduct","UpdateProduct","ListProduct","LoadData","datatoLoad","brandActions","ListBrand","DeleteProduct","AddProductCar","product","DeleteProductCar","ConfirmShop","carDetail","myproduct","load","CreateBrand","formData","UpdateBrand","DeleteBrand","information","createContext","displayName","progress","margin","spacing","position","top","left","marginTop","marginLeft","axiosManager","axios","create","baseURL","process","headers","url","params","all","requests","results","r","refreshToken","defaults"],"mappings":"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","file":"static/js/main.05504749.chunk.js","sourcesContent":["class MyUtils {\r\n    static setRoutes(config) {\r\n        let routes = [...config.routes];\r\n\r\n        if (config.settings || config.auth) {\r\n            routes = routes.map((route) => {\r\n                let auth = config.auth ? [...config.auth] : [];\r\n                auth = route.auth ? [...auth, ...route.auth] : auth;\r\n                return {\r\n                    ...route,\r\n                    settings: { ...config.settings, ...route.settings },\r\n                    auth\r\n                };\r\n            });\r\n        }\r\n        return [...routes];\r\n    }\r\n\r\n    static generateRoutesFromConfigs(configs) {\r\n        let allRoutes = [];\r\n        configs.forEach((config) => {\r\n            allRoutes = [\r\n                ...allRoutes,\r\n                ...this.setRoutes(config)\r\n            ]\r\n        });\r\n        return allRoutes;\r\n    }\r\n}\r\nexport default MyUtils;","import React from 'react'\r\n\r\nexport const AuthRouterConfig = {\r\n    settings: {\r\n        layout: {\r\n            config: {}\r\n        }\r\n    },\r\n    routes: [\r\n        {\r\n            path: '/login',\r\n            component: React.lazy(() => import('./loginPages'))\r\n        },\r\n        {\r\n            path: '/register',\r\n            component: React.lazy(() => import('./registerPage'))\r\n        },\r\n        {\r\n            path: '/auth/forgot-password',\r\n            component: React.lazy(() => import('./managePassword'))\r\n        },\r\n        {\r\n            path: '/auth/reset-password',\r\n            component: React.lazy(() => import('./managePassword'))\r\n        },\r\n        {\r\n            path: '/auth/confirm-account',\r\n            component: React.lazy(() => import('./confirmationEmail'))\r\n        }\r\n    ]\r\n};","/**\n * Authorization Roles\n */\nconst authRoles = {\n    admin: ['admin'],\n    user: ['user', 'admin']\n};\n\nexport default authRoles;\n","import React from 'react'\r\nimport authRoles from '../../auth/authRoles';\r\n\r\nexport const AccountRouterConfig = {\r\n    settings: {\r\n        layout: {\r\n            config: {}\r\n        }\r\n    },\r\n    routes: [\r\n        {\r\n            path: '/home',\r\n            auth: authRoles.user,\r\n            component: React.lazy(() => import('./MyProfile'))\r\n        },\r\n        {\r\n            path: '/product/',\r\n            auth: authRoles.user,\r\n            component: React.lazy(() => import('./ProductForm'))\r\n        },\r\n        {\r\n            path: '/product/detail',\r\n            auth: authRoles.user,\r\n            component: React.lazy(() => import('./DetailProduct'))\r\n        }\r\n    ]\r\n};","import React from 'react'\r\nimport authRoles from '../../auth/authRoles';\r\n\r\nexport const AdminRouterConfig = {\r\n    settings: {\r\n        layout: {\r\n            config: {}\r\n        }\r\n    },\r\n    routes: [\r\n        {\r\n            path: '/dashboard',\r\n            auth: authRoles.admin,\r\n            component: React.lazy(() => import('./admindashboard'))\r\n        }\r\n    ]\r\n};","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { MyUtils } from \"../../@Utils\";\r\nimport { AuthRouterConfig } from '../pages/auth/auth.routeConfig';\r\nimport { AccountRouterConfig } from '../pages/account/account.routeConfig';\r\nimport { AdminRouterConfig } from '../pages/admin/admin.routeConfig';\r\nimport { PublicRouterConfig } from '../pages/publicPage/public.routerConfig';\r\n\r\n\r\n\r\nconst routeConfigs = [\r\n    PublicRouterConfig,\r\n    AuthRouterConfig,\r\n    AccountRouterConfig,\r\n    AdminRouterConfig\r\n];\r\n\r\nconst routes = [\r\n    ...MyUtils.generateRoutesFromConfigs(routeConfigs),\r\n    {\r\n        path: '/',\r\n        exact: true,\r\n        component: () => <Redirect to=\"/shop\" />\r\n    },\r\n    {\r\n        component: () => <Redirect to=\"/error-404\" />\r\n    }\r\n];\r\n\r\nexport default routes;","import React from 'react'\r\n\r\nexport const PublicRouterConfig = {\r\n    settings: {\r\n        layout: {\r\n            config: {}\r\n        }\r\n    },\r\n    routes: [\r\n        {\r\n            path: '/shop/',\r\n            component: React.lazy(() => import('./LandingPage'))\r\n        },\r\n        {\r\n            path: '/brands',\r\n            component: React.lazy(() => import('./LandingPage'))\r\n        },\r\n        {\r\n            path: '/carDetail',\r\n            component: React.lazy(() => import('./CarDetail'))\r\n        }\r\n    ]\r\n};","import { authConstant } from '../actions/user.actions'\r\nimport baseService from '../../../services/baseService';\r\n\r\nconst initialState = {\r\n    loadingLogin: false,\r\n    userLogin: false,\r\n    errorLogin: false,\r\n\r\n    loadingRegister: false,\r\n    userRegister: false,\r\n    errorRegister: false,\r\n\r\n    loadingConfirm: false,\r\n    userConfirm: null,\r\n    errorConfirm: null,\r\n\r\n    listUser: [],\r\n    loadingListUser: false,\r\n    errorListUser: false\r\n}\r\nconst userReducer = (state = initialState, { type, payload }) => {\r\n\r\n    switch (type) {\r\n        case authConstant.LIST_USERS:\r\n            return {\r\n                ...state,\r\n                loadingListUser: payload.loading,\r\n                listUser: payload.data,\r\n                errorListUser: payload.error\r\n            }\r\n\r\n        case authConstant.LOGOUT_REQUEST:\r\n            localStorage.removeItem('phonelicence');\r\n            localStorage.removeItem('currentUser');\r\n            return { loadingLogin: false, userLogin: null }\r\n\r\n        case authConstant.LOGIN_REQUEST:\r\n            if (payload.data) {\r\n                const user = payload.data\r\n                baseService.setHeaders(JSON.stringify(user.accessToken))\r\n                localStorage.setItem('currentUser', JSON.stringify({ user: user.user, role: user.role }));\r\n            }\r\n            return { ...state, loadingLogin: payload.loading, userLogin: payload.data, errorLogin: payload.error }\r\n\r\n        case authConstant.REFRESH_REQUEST:\r\n            return { userLogin: payload }\r\n\r\n        case authConstant.REGISTER_REQUEST:\r\n            return { ...state, loadingRegister: payload.loading, userRegister: payload.data, errorRegister: payload.error }\r\n\r\n        case authConstant.UPDATEUSER_REQUEST:\r\n            return { ...state, loadingUpdateUser: payload.loading, userUpdated: payload.data, errorUpdated: payload.error }\r\n\r\n        case authConstant.DELETEUSER_REQUEST:\r\n            return { ...state, loadingDeleteUser: payload.loading, userDeleted: payload.data, errorDeleted: payload.error }\r\n\r\n        case authConstant.CONFIRM_REQUEST:\r\n            return { loadingConfirm: true }\r\n        case authConstant.CONFIRM_SUCCESS:\r\n            return { loadingConfirm: false }\r\n        case authConstant.CONFIRM_FAILURE:\r\n            return { loadingConfirm: false, errorConfirm: payload }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport default userReducer;\r\n\r\n","import { alertConstants } from './alert.actions';\r\n\r\nconst alertReducer = (state = {}, action: { type: any; message: any; title: any }) => {\r\n\tswitch (action.type) {\r\n\t\tcase alertConstants.SUCCESS:\r\n\t\t\treturn {\r\n\t\t\t\ttype: 'success',\r\n\t\t\t\tmessage: action.message,\r\n\t\t\t\ttitle: action.title\r\n\t\t\t};\r\n\t\tcase alertConstants.INFORMATION:\r\n\t\t\treturn {\r\n\t\t\t\ttype: 'information',\r\n\t\t\t\tmessage: action.message,\r\n\t\t\t\ttitle: action.title\r\n\t\t\t};\r\n\t\tcase alertConstants.WARNING:\r\n\t\t\treturn {\r\n\t\t\t\ttype: 'warning',\r\n\t\t\t\tmessage: action.message,\r\n\t\t\t\ttitle: action.title\r\n\t\t\t};\r\n\t\tcase alertConstants.ERROR:\r\n\t\t\treturn {\r\n\t\t\t\ttype: 'error',\r\n\t\t\t\tmessage: action.message,\r\n\t\t\t\ttitle: action.title\r\n\t\t\t};\r\n\t\tcase alertConstants.CLEAR: {\r\n\t\t\treturn {};\r\n\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\nexport default alertReducer;\r\n","import { productConstant } from '../actions/product.action'\r\n\r\nconst initialState = {\r\n    loadingCreateProd: false,\r\n    created: false,\r\n    error: false,\r\n\r\n    listCarProduct: []\r\n}\r\nconst productReducer = (state = initialState, { type, payload }) => {\r\n    switch (type) {\r\n        case productConstant.LOADDATA_REQUEST:\r\n            return {\r\n                ...state,\r\n                loadingData: true,\r\n                loadData: false,\r\n                errorData: false\r\n            }\r\n        case productConstant.LOADDATA_RESPONSE:\r\n            return {\r\n                ...state,\r\n                loadingData: false,\r\n                loadData: payload.data,\r\n                errorData: payload.error\r\n            }\r\n        case productConstant.CREATEPROD_REQUEST:\r\n            return {\r\n                ...state,\r\n                loadingCreateProd: true,\r\n                created: false,\r\n                error: false\r\n            }\r\n        case productConstant.CREATEPROD_RESPONSE:\r\n            return { ...state, loadingCreateProd: false, created: payload.created, errorList: payload.error }\r\n\r\n        case productConstant.LOADPRODUCT_REQUEST:\r\n            return { ...state, loadingList: payload.loading, dataList: payload.listProd, errorList: payload.error }\r\n\r\n        case productConstant.DELETEPRODUCT_CAR_REQUEST:\r\n            return { ...state, listCarProduct: [...payload] }\r\n\r\n        case productConstant.ADDPRODUCT_CAR_REQUEST:\r\n            let action = { exist: false, index: null };\r\n            console.log('data', state.listCarProduct)\r\n            if (state.listCarProduct) {\r\n                state.listCarProduct.filter((item, index) => {\r\n                    if (item._id == payload._id) {\r\n                        action = { exist: true, index }\r\n                    }\r\n                })\r\n            }\r\n            if (action.exist) {\r\n                let number = state.listCarProduct[action.index].cant\r\n                payload.cant = number + 1\r\n                return {\r\n                    ...state, listCarProduct: [\r\n                        ...state.listCarProduct.slice(0, action.index),\r\n                        Object.assign({}, state.listCarProduct[action.index], payload),\r\n                        ...state.listCarProduct.slice(action.index + 1)\r\n                    ]\r\n                }\r\n\r\n            } else {\r\n                return { ...state, listCarProduct: state.listCarProduct ? [...state.listCarProduct, payload] : [payload] }\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport default productReducer;\r\n\r\n","import { brandConstant } from '../actions/brand.action'\r\n\r\nconst initialState = {\r\n    loadingCreateProd: false,\r\n    created: false,\r\n    error: false\r\n}\r\nconst brandReducer = (state = initialState, { type, payload }) => {\r\n    switch (type) {\r\n        case brandConstant.LIST_BRAND:\r\n            return {\r\n                ...state,\r\n                loadingList: payload.loading,\r\n                listBrand: payload.data,\r\n                errorList: payload.error\r\n            }\r\n        case brandConstant.ADD_BRAND:\r\n            return {\r\n                ...state,\r\n                loadingInsertBrand: payload.loading,\r\n                brandInserted: payload.data,\r\n                insertError: payload.error\r\n            }\r\n        case brandConstant.UPDATE_BRAND:\r\n            return {\r\n                loadingCreateProd: true,\r\n                created: false,\r\n                error: false\r\n            }\r\n        case brandConstant.DELETE_BRAND:\r\n            return {\r\n                loadingDeleteBrand: payload.loading,\r\n                brandDeleted: payload.data,\r\n                deleteError: payload.error\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport default brandReducer;\r\n\r\n","import { combineReducers } from 'redux';\r\nimport authReducers from '../../auth/store/reducers/user.reducer';\r\nimport alertReducer from '../../components/notifications/alert.reducer';\r\nimport productReducer from './product.reducer';\r\nimport brandReducer from './brand.reducer';\r\n\r\nexport default combineReducers({\r\n    alertReducer,\r\n    authReducers,\r\n    productReducer,\r\n    brandReducer\r\n})","import { createStore, applyMiddleware } from \"redux\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport promiseMiddleware from \"redux-promise\";\r\nimport rootReducer from \"./reducers/rootReducer\";\r\nimport { createLogger } from \"redux-logger\";\r\n\r\nconst loggerMiddleware = createLogger();\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    applyMiddleware(thunkMiddleware, promiseMiddleware, loggerMiddleware)\r\n    // window.devToolsExtension && window.devToolsExtension()\r\n);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport ErrorIcon from '@material-ui/icons/Error';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\r\nimport WarningIcon from '@material-ui/icons/Warning';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { green, red, yellow, blue } from '@material-ui/core/colors';\r\n\r\nimport { Grid } from '@material-ui/core';\r\nconst variantIcon = {\r\n\tsuccess: CheckCircleIcon,\r\n\twarning: WarningIcon,\r\n\terror: ErrorIcon,\r\n\tinfo: InfoIcon\r\n};\r\nconst styles1 = theme => ({\r\n\tsuccess: {\r\n\t\tbackgroundColor: green[500]\r\n\t},\r\n\terror: {\r\n\t\tbackgroundColor: red[500]\r\n\t},\r\n\tinfo: {\r\n\t\tbackgroundColor: blue[500]\r\n\t},\r\n\twarning: {\r\n\t\tbackgroundColor: yellow[500]\r\n\t},\r\n\ticon: {\r\n\t\tfontSize: 20\r\n\t},\r\n\ticonVariant: {\r\n\t\topacity: 0.9,\r\n\t\tmarginRight: '10px'\r\n\t},\r\n\tmessage: {\r\n\t\tdisplay: 'flex',\r\n\t\talignItems: 'center'\r\n\t}\r\n});\r\nfunction MySnackbarContent(props) {\r\n\tconst { classes, className, message, title, onClose, variant, ...other } = props;\r\n\tconst Icon = variantIcon[variant];\r\n\r\n\treturn (\r\n\t\t<SnackbarContent\r\n\t\t\tclassName={classes[variant]}\r\n\t\t\taria-describedby='client-snackbar'\r\n\t\t\tmessage={\r\n\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t<Grid container direction='row' justify='center' alignItems='center'>\r\n\t\t\t\t\t\t<Grid item xs={2}>\r\n\t\t\t\t\t\t\t<Icon style={{ fontSize: 40 }} className={(classes.icon, classes.iconVariant)} />\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={10}>\r\n\t\t\t\t\t\t\t{title && <span style={{ fontStyle: 'bold' }}>{title}</span>}\r\n\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\tid='client-snackbar'\r\n\t\t\t\t\t\t\t\tclassName={classes.message}\r\n\t\t\t\t\t\t\t\tstyle={{ minWidth: '300px', maxWidth: '400px' }}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{message}\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</React.Fragment>\r\n\t\t\t}\r\n\t\t\taction={[\r\n\t\t\t\t<IconButton\r\n\t\t\t\t\tkey='close'\r\n\t\t\t\t\taria-label='Close'\r\n\t\t\t\t\tcolor='inherit'\r\n\t\t\t\t\tclassName={classes.close}\r\n\t\t\t\t\tonClick={onClose}\r\n\t\t\t\t>\r\n\t\t\t\t\t<CloseIcon className={classes.icon} />\r\n\t\t\t\t</IconButton>\r\n\t\t\t]}\r\n\t\t\t{...other}\r\n\t\t/>\r\n\t);\r\n}\r\n\r\nMySnackbarContent.propTypes = {\r\n\tclasses: PropTypes.object.isRequired,\r\n\tclassName: PropTypes.string,\r\n\tmessage: PropTypes.node,\r\n\ttitle: PropTypes.node,\r\n\tonClose: PropTypes.func,\r\n\tvariant: PropTypes.oneOf(['success', 'warning', 'error', 'info']).isRequired\r\n};\r\n\r\nconst MySnackbarContentWrapper = withStyles(styles1)(MySnackbarContent);\r\n\r\nclass CustomizedSnackbars extends React.Component {\r\n\thandleClose = (event, reason) => {\r\n\t\tif (reason === 'clickaway') {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.props.clearNotifications();\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<Snackbar\r\n\t\t\t\t\tanchorOrigin={{\r\n\t\t\t\t\t\tvertical: 'bottom',\r\n\t\t\t\t\t\thorizontal: 'right'\r\n\t\t\t\t\t}}\r\n\t\t\t\t\topen={this.props.open}\r\n\t\t\t\t\tautoHideDuration={3000}\r\n\t\t\t\t\tonClose={this.handleClose}\r\n\t\t\t\t>\r\n\t\t\t\t\t<MySnackbarContentWrapper\r\n\t\t\t\t\t\tonClose={this.handleClose}\r\n\t\t\t\t\t\tvariant={this.props.typeMessage}\r\n\t\t\t\t\t\tmessage={this.props.customMessage}\r\n\t\t\t\t\t\ttitle={this.props.title}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Snackbar>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default CustomizedSnackbars;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { userActions } from './store/actions/user.actions';\r\nimport { alertActions } from '../components/notifications/alert.actions';\r\nimport AlertNotifi from '../components/notifications/alertNotifi';\r\n\r\n\r\nclass Auth extends Component {\r\n    /*eslint-disable-next-line no-useless-constructor*/\r\n    constructor(props) {\r\n        super(props);\r\n        this.jwtCheck();\r\n\r\n    }\r\n\r\n    jwtCheck = () => {\r\n        let tokenStorage = JSON.parse(localStorage.getItem('phonelicence'));\r\n        let userStorage = JSON.parse(localStorage.getItem('currentUser'));\r\n        if (tokenStorage !== null) {\r\n            this.props.handleRefreshToken(tokenStorage, userStorage)\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { children, notifications } = this.props;\r\n\r\n        return (\r\n            <React.Fragment>\r\n                {notifications.message && (\r\n                    <AlertNotifi\r\n                        clearNotifications={this.props.clearNotifications}\r\n                        open={notifications.message ? true : false}\r\n                        typeMessage={notifications.type}\r\n                        customMessage={notifications.message}\r\n                    />\r\n                )}\r\n                {children}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({ authReducers, alertReducer }) => {\r\n    return {\r\n        userLogin: authReducers.userLogin,\r\n        notifications: alertReducer\r\n    };\r\n};\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        clearNotifications: () => {\r\n            dispatch(alertActions.clear());\r\n        },\r\n        handleRefreshToken: (token, { user, role }) => {\r\n            dispatch(userActions.RefreshToken({ token, user, role }));\r\n        }\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps,\r\n    mapDispatchToProps)(Auth);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { matchRoutes } from 'react-router-config';\r\nimport { withRouter } from 'react-router-dom';\r\nimport AppContext from '../AppContext';\r\n\r\nclass SisGAuthorization extends Component {\r\n\r\n    constructor(props, context) {\r\n        super(props);\r\n        const { routes } = context;\r\n        this.state = {\r\n            accessGranted: false,\r\n            routes\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (!this.state.accessGranted) {\r\n            this.redirectRoute(this.props);\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (!this.state.accessGranted) {\r\n            this.redirectRoute(this.props);\r\n        }\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        return nextState.accessGranted !== this.state.accessGranted;\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { location, user } = props;\r\n        const { pathname } = location;\r\n\r\n        const matched = matchRoutes(state.routes, pathname)[0];\r\n\r\n        let roleUser = user ? user.role : null\r\n        const accessGranted = (matched && matched.route.auth && matched.route.auth.length > 0) ? matched.route.auth.includes(roleUser) : true;\r\n        if (props.loadingLogin) {\r\n            return null\r\n        } else {\r\n            return {\r\n                accessGranted\r\n            };\r\n        }\r\n    }\r\n\r\n\r\n\r\n    redirectRoute(props) {\r\n        const { location, user, history } = props;\r\n        const { pathname, state } = location;\r\n\r\n        const redirectUrl = state && state.redirectUrl ? state.redirectUrl : '/shop';\r\n\r\n        history.push({\r\n            pathname: redirectUrl\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { children } = this.props;\r\n        const { accessGranted } = this.state;\r\n        return accessGranted ? <React.Fragment>\r\n\r\n            {children}\r\n        </React.Fragment> : null;\r\n    }\r\n}\r\n\r\nfunction mapStateToProps({ authReducers, alertReducer }) {\r\n    return {\r\n        user: authReducers.userLogin,\r\n        loadingLogin: authReducers.loadingLogin,\r\n    }\r\n}\r\n\r\nSisGAuthorization.contextType = AppContext;\r\n\r\nexport default withRouter(connect(mapStateToProps, null)(SisGAuthorization));\r\n","import React, { Suspense } from 'react';\r\nimport { renderRoutes } from 'react-router-config'\r\n\r\nimport '../styles/App.css';\r\nimport { createBrowserHistory } from 'history';\r\nimport AppContext from './AppContext';\r\nimport { Provider } from 'react-redux';\r\nimport { Router } from 'react-router-dom';\r\n\r\nimport routes from './configs/routesConfig';\r\nimport { store } from './store';\r\nimport Auth from './auth/Auth';\r\nimport SisGAuthorization from './auth/SisGAuthorization';\r\nimport LoadingCircle from './components/Progress/loadingCircle';\r\n\r\n\r\n\r\n\r\nconst hist = createBrowserHistory();\r\n\r\nfunction App(props) {\r\n  return (\r\n    <AppContext.Provider\r\n      value={{\r\n        routes\r\n      }}\r\n    >\r\n      <Provider store={store}>\r\n        <Auth>\r\n          <Router history={hist}>\r\n            <SisGAuthorization>\r\n              <Suspense fallback={<LoadingCircle generalCenter />} >\r\n                <React.Fragment>\r\n                  {renderRoutes(routes)}\r\n                </React.Fragment>\r\n              </Suspense>\r\n            </SisGAuthorization>\r\n          </Router>\r\n        </Auth>\r\n      </Provider>\r\n    </AppContext.Provider>\r\n  );\r\n}\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './app/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import baseService from '../../../services/baseService';\r\nimport { alertActions } from '../../../components/notifications/alert.actions';\r\n\r\nexport const authConstant = {\r\n    LOGOUT_REQUEST: 'LOGOUT_REQUEST',\r\n\r\n    LOGIN_REQUEST: 'LOGIN_REQUEST',\r\n\r\n    REFRESH_REQUEST: 'REFRESH_REQUEST',\r\n\r\n    REGISTER_REQUEST: 'REGISTER_REQUEST',\r\n    UPDATEUSER_REQUEST: 'UPDATEUSER_REQUEST',\r\n    DELETEUSER_REQUEST: 'DELETEUSER_REQUEST',\r\n\r\n    CONFIRM_REQUEST: 'CONFIRM_REQUEST',\r\n    CONFIRM_SUCCESS: 'CONFIRM_SUCCESS',\r\n    CONFIRM_FAILURE: 'CONFIRM_FAILURE',\r\n\r\n    LIST_USERS: 'LIST_USERS'\r\n}\r\n\r\nexport const userActions = {\r\n    LoginUser, Logout, RegisterUser, DeleteUser, UpdateUser, ConfirmAccount, RefreshToken, ListUsers\r\n};\r\n\r\nfunction ListUsers() {\r\n    return dispatch => {\r\n        dispatch({ type: authConstant.LIST_USERS, payload: { loading: true, data: [], error: false } });\r\n        baseService.GW.get('/auth/users')\r\n            .then(\r\n                data => {\r\n                    dispatch({ type: authConstant.LIST_USERS, payload: { loading: false, data: data.data, error: false } });\r\n                },\r\n                error => {\r\n                    dispatch({ type: authConstant.LIST_USERS, payload: { loading: false, data: [], error: error } });\r\n                }\r\n            );\r\n    };\r\n}\r\n\r\nfunction RefreshToken(data) {\r\n    return dispatch => {\r\n        dispatch({ type: authConstant.REFRESH_REQUEST, payload: data });\r\n    };\r\n}\r\n\r\nfunction Logout() {\r\n    return dispatch => {\r\n        dispatch({ type: authConstant.LOGOUT_REQUEST });\r\n    };\r\n}\r\n\r\nfunction LoginUser(data) {\r\n    return dispatch => {\r\n        dispatch({ type: authConstant.LOGIN_REQUEST, payload: { loading: true, data: null, error: false } });\r\n        baseService.GW.post('/auth/login', data)\r\n            .then(\r\n                data => {\r\n                    dispatch({ type: authConstant.LOGIN_REQUEST, payload: { loading: false, data: data.data, error: false } });\r\n                    dispatch(alertActions.success(data.data.user ? `Welcome ${data.data.user}` : 'Welcome'));\r\n                },\r\n                error => {\r\n                    dispatch({ type: authConstant.LOGIN_REQUEST, payload: { loading: false, data: false, error: error } });\r\n                    dispatch(alertActions.error('User or password incorrect'));\r\n                }\r\n            );\r\n    };\r\n}\r\n\r\nfunction RegisterUser(data) {\r\n    let createAccount = {\r\n        email: data.email,\r\n        password: data.password,\r\n        userName: data.user,\r\n    }\r\n\r\n    return dispatch => {\r\n        dispatch({ type: authConstant.REGISTER_REQUEST, payload: { loading: true, data: null, error: false } });\r\n        baseService.GW.post('/auth/register', createAccount)\r\n            .then(\r\n                data => {\r\n                    dispatch({ type: authConstant.REGISTER_REQUEST, payload: { loading: false, data: data.data, error: false } });\r\n                    dispatch(alertActions.success('User register succesfully'));\r\n\r\n                },\r\n                error => {\r\n                    dispatch({ type: authConstant.REGISTER_REQUEST, payload: { loading: false, data: null, error: true } });\r\n                    dispatch(alertActions.error('User can not be registered'));\r\n\r\n                }\r\n            );\r\n    };\r\n}\r\nfunction UpdateUser(data) {\r\n    return dispatch => {\r\n        dispatch({ type: authConstant.UPDATEUSER_REQUEST, payload: { loading: true, data: null, error: false } });\r\n        baseService.GW.put(`/auth/users/${data._id}`, data)\r\n            .then(\r\n                data => {\r\n                    dispatch({ type: authConstant.UPDATEUSER_REQUEST, payload: { loading: false, data: data.data, error: false } });\r\n                    dispatch(alertActions.success('User updated succesfully'));\r\n                    dispatch(ListUsers())\r\n                },\r\n                error => {\r\n                    dispatch({ type: authConstant.UPDATEUSER_REQUEST, payload: { loading: false, data: null, error: true } });\r\n                    dispatch(alertActions.error('User can not be updated'));\r\n\r\n                }\r\n            );\r\n    };\r\n}\r\n\r\nfunction DeleteUser(dataID) {\r\n    return dispatch => {\r\n        dispatch({ type: authConstant.DELETEUSER_REQUEST, payload: { loading: true, data: null, error: false } });\r\n        baseService.GW.delete(`/auth/users/${dataID}`)\r\n            .then(\r\n                data => {\r\n                    dispatch({ type: authConstant.DELETEUSER_REQUEST, payload: { loading: false, data: data.data, error: false } });\r\n                    dispatch(alertActions.success('User deleted succesfully'));\r\n                    dispatch(ListUsers())\r\n                },\r\n                error => {\r\n                    dispatch({ type: authConstant.DELETEUSER_REQUEST, payload: { loading: false, data: null, error: true } });\r\n                    dispatch(alertActions.error('User can not be deleted'));\r\n\r\n                }\r\n            );\r\n    };\r\n}\r\n\r\n\r\n\r\nfunction ConfirmAccount(dataID) {\r\n    return dispatch => {\r\n        dispatch(request());\r\n        baseService.GW.post('/auth/confirmAccount', dataID)\r\n            .then(\r\n                data => {\r\n                    dispatch(success(data.data));\r\n                },\r\n                error => {\r\n                    dispatch(failure(error.toString()));\r\n                }\r\n            );\r\n    };\r\n    function request() { return { type: authConstant.CONFIRM_REQUEST } }\r\n    function success(data) {\r\n        return { type: authConstant.CONFIRM_SUCCESS, payload: data }\r\n    }\r\n    function failure(error) { return { type: authConstant.CONFIRM_FAILURE, payload: error } }\r\n}","import { alertActions } from '../../components/notifications/alert.actions';\r\nimport baseService from '../../services/baseService';\r\nimport { brandActions } from './brand.action';\r\n\r\nexport const productConstant = {\r\n    LOADDATA_REQUEST: 'LOADDATA_REQUEST',\r\n    LOADDATA_RESPONSE: 'LOADDATA_RESPONSE',\r\n\r\n    DELETE_REQUEST: 'DELETE_REQUEST',\r\n    DELETE_RESPONSE: 'DELETE_RESPONSE',\r\n\r\n    CREATEPROD_REQUEST: 'CREATEPROD_REQUEST',\r\n    CREATEPROD_RESPONSE: 'CREATEPROD_RESPONSE',\r\n\r\n    LOADPRODUCT_REQUEST: 'LOADPRODUCT_REQUEST',\r\n\r\n    ADDPRODUCT_CAR_REQUEST: 'ADDPRODUCT_CAR_REQUEST',\r\n    DELETEPRODUCT_CAR_REQUEST: 'DELETEPRODUCT_CAR_REQUEST',\r\n    PURCHASE_REQUEST: 'PURCHASE_REQUEST'\r\n}\r\n\r\nexport const productActions = {\r\n    CreateProduct, UpdateProduct, ListProduct, LoadData, DeleteProduct, AddProductCar, DeleteProductCar, ConfirmShop\r\n};\r\n\r\nfunction LoadData(datatoLoad) {\r\n    return dispatch => {\r\n        dispatch(brandActions.ListBrand());\r\n        if (datatoLoad) {\r\n            dispatch({ type: productConstant.LOADDATA_REQUEST });\r\n            baseService.GW.get(`/product/${datatoLoad}`)\r\n                .then(\r\n                    data => {\r\n                        dispatch({ type: productConstant.LOADDATA_RESPONSE, payload: { data: data.data, error: false } });\r\n                    },\r\n                    error => {\r\n                        dispatch(alertActions.error(error.message));\r\n                        dispatch({ type: productConstant.LOADDATA_RESPONSE, payload: { data: false, error: error } });\r\n                    }\r\n                );\r\n        }\r\n    };\r\n}\r\n\r\nfunction DeleteProduct(dataID) {\r\n    return dispatch => {\r\n        dispatch({ type: productConstant.DELETE_REQUEST });\r\n\r\n        baseService.GW.delete(`/product/${dataID}`)\r\n            .then(\r\n                data => {\r\n                    dispatch(alertActions.success('Product deleted succesfully'));\r\n                    dispatch(ListProduct('myproduct'))\r\n                },\r\n                error => {\r\n                    dispatch(alertActions.error(error.message));\r\n                    dispatch({ type: productConstant.DELETE_RESPONSE, payload: { data: false, error: error } });\r\n                }\r\n            );\r\n    };\r\n}\r\n\r\nfunction CreateProduct(data) {\r\n    return dispatch => {\r\n        dispatch({ type: productConstant.CREATEPROD_REQUEST });\r\n        baseService.GW.post('/product', data)\r\n            .then(\r\n                data => {\r\n                    dispatch(alertActions.success('Product created succesfully'));\r\n                    dispatch({ type: productConstant.CREATEPROD_RESPONSE, payload: { created: true, error: false } });\r\n                },\r\n                error => {\r\n                    dispatch(alertActions.error(error.message));\r\n                    dispatch({ type: productConstant.CREATEPROD_RESPONSE, payload: { created: false, error: error } });\r\n                }\r\n            );\r\n    };\r\n}\r\n\r\nfunction UpdateProduct(data) {\r\n    return dispatch => {\r\n        dispatch({ type: productConstant.CREATEPROD_REQUEST });\r\n        baseService.GW.put('/product', data)\r\n            .then(\r\n                data => {\r\n                    dispatch(alertActions.success('Product updated succesfully'));\r\n                    dispatch({ type: productConstant.CREATEPROD_RESPONSE, payload: { created: true, error: false } });\r\n                },\r\n                error => {\r\n                    dispatch(alertActions.error(error.message));\r\n                    dispatch({ type: productConstant.CREATEPROD_RESPONSE, payload: { created: false, error: error } });\r\n                }\r\n            );\r\n    };\r\n}\r\n\r\nfunction AddProductCar(product) {\r\n    return dispatch => {\r\n        product.cant = 1;\r\n        dispatch({ type: productConstant.ADDPRODUCT_CAR_REQUEST, payload: product });\r\n    };\r\n}\r\nfunction DeleteProductCar(product) {\r\n    return dispatch => {\r\n        dispatch({ type: productConstant.DELETEPRODUCT_CAR_REQUEST, payload: product });\r\n    };\r\n}\r\nfunction ConfirmShop(carDetail) {\r\n    return dispatch => {\r\n        dispatch({ type: productConstant.PURCHASE_REQUEST });\r\n        baseService.GW.post('/purchase', carDetail)\r\n            .then(\r\n                data => {\r\n                    dispatch(alertActions.success('Product updated succesfully'));\r\n                    // dispatch({ type: productConstant.CREATEPROD_RESPONSE, payload: { created: true, error: false } });\r\n                },\r\n                error => {\r\n                    dispatch(alertActions.error(error.message));\r\n                    // dispatch({ type: productConstant.CREATEPROD_RESPONSE, payload: { created: false, error: error } });\r\n                }\r\n            );\r\n    }\r\n}\r\n\r\nfunction ListProduct(myproduct, load, filter) {\r\n    return dispatch => {\r\n        dispatch(brandActions.ListBrand());\r\n        dispatch({ type: productConstant.LOADPRODUCT_REQUEST, payload: { loading: true, listProd: false, error: false } });\r\n        baseService.GW.get(myproduct ? '/product' : filter ? `/allproduct/${filter}` : '/allproduct')\r\n            .then(\r\n                data => {\r\n                    dispatch({ type: productConstant.LOADPRODUCT_REQUEST, payload: { loading: false, listProd: data.data, error: false } });\r\n                },\r\n                error => {\r\n                    dispatch(alertActions.error(error.message));\r\n                    dispatch({ type: productConstant.LOADPRODUCT_REQUEST, payload: { loading: false, listProd: false, error: true } });\r\n                }\r\n            );\r\n    };\r\n}","import { alertActions } from '../../components/notifications/alert.actions';\r\nimport baseService from '../../services/baseService';\r\n\r\nexport const brandConstant = {\r\n    LIST_BRAND: 'LIST_BRAND',\r\n    ADD_BRAND: 'ADD_BRAND',\r\n    UPDATE_BRAND: 'UPDATE_BRAND',\r\n    DELETE_BRAND: 'DELETE_BRAND',\r\n}\r\n\r\nexport const brandActions = {\r\n    CreateBrand, UpdateBrand, ListBrand, DeleteBrand\r\n};\r\n\r\nfunction CreateBrand(formData) {\r\n    return dispatch => {\r\n        dispatch({ type: brandConstant.ADD_BRAND, payload: { loading: true, data: false, error: false } });\r\n\r\n        baseService.GW.post('/brand', formData)\r\n            .then(\r\n                data => {\r\n                    dispatch({ type: brandConstant.ADD_BRAND, payload: { loading: false, data: data.data, error: false } });\r\n                    dispatch(alertActions.success('Brand created succesfully'));\r\n                    dispatch(ListBrand())\r\n\r\n                },\r\n                error => {\r\n                    dispatch(alertActions.error(error.message));\r\n                    dispatch({ type: brandConstant.ADD_BRAND, payload: { loading: false, data: false, error: error } });\r\n                }\r\n            );\r\n    };\r\n}\r\nfunction UpdateBrand(formData) {\r\n    return dispatch => {\r\n        dispatch({ type: brandConstant.UPDATE_BRAND, payload: { loading: true, data: false, error: false } });\r\n\r\n        baseService.GW.put('/brand', formData)\r\n            .then(\r\n                data => {\r\n                    dispatch({ type: brandConstant.UPDATE_BRAND, payload: { loading: false, data: data.data, error: false } });\r\n                    dispatch(alertActions.success('Brand updated succesfully'));\r\n                    dispatch(ListBrand())\r\n                },\r\n                error => {\r\n                    dispatch(alertActions.error(error.message));\r\n                    dispatch({ type: brandConstant.UPDATE_BRAND, payload: { loading: false, data: false, error: error } });\r\n                }\r\n            );\r\n    };\r\n}\r\nfunction ListBrand() {\r\n    return dispatch => {\r\n        dispatch({ type: brandConstant.LIST_BRAND, payload: { loading: true, data: false, error: false } });\r\n\r\n        baseService.GW.get('/brand')\r\n            .then(\r\n                data => {\r\n                    dispatch({ type: brandConstant.LIST_BRAND, payload: { loading: false, data: data.data, error: false } });\r\n                },\r\n                error => {\r\n                    dispatch(alertActions.error(error.message));\r\n                    dispatch({ type: brandConstant.LIST_BRAND, payload: { loading: false, data: [], error: error } });\r\n                }\r\n            );\r\n    };\r\n}\r\nfunction DeleteBrand(dataID) {\r\n    return dispatch => {\r\n        dispatch({ type: brandConstant.DELETE_BRAND, payload: { loading: true, error: false } });\r\n\r\n        baseService.GW.delete(`/brand/${dataID}`)\r\n            .then(\r\n                data => {\r\n                    dispatch({ type: brandConstant.DELETE_BRAND, payload: { loading: false, error: false } });\r\n                    dispatch(alertActions.success('Brand deleted succesfully'));\r\n                    dispatch(ListBrand())\r\n                },\r\n                error => {\r\n                    dispatch(alertActions.error(error.message));\r\n                    dispatch({ type: brandConstant.DELETE_BRAND, payload: { loading: false, error: error } });\r\n\r\n                }\r\n            );\r\n    };\r\n} ","export const alertConstants = {\r\n\tSUCCESS: 'SUCCESS',\r\n\tINFORMATION: 'INFORMATION',\r\n\tWARNING: 'WARNING',\r\n\tERROR: 'ERROR',\r\n\tCLEAR: 'CLEAR'\r\n};\r\n\r\nexport const alertActions = {\r\n\tsuccess,\r\n\tinformation,\r\n\twarning,\r\n\terror,\r\n\tclear\r\n};\r\n\r\nfunction success(message, title) {\r\n\treturn {\r\n\t\ttype: alertConstants.SUCCESS,\r\n\t\tmessage,\r\n\t\ttitle: title ? title : 'SUCCESS'\r\n\t};\r\n}\r\nfunction information(message, title) {\r\n\treturn {\r\n\t\ttype: alertConstants.INFORMATION,\r\n\t\tmessage,\r\n\t\ttitle: title ? title : 'INFORMATION'\r\n\t};\r\n}\r\nfunction warning(message, title) {\r\n\treturn {\r\n\t\ttype: alertConstants.WARNING,\r\n\t\tmessage,\r\n\t\ttitle: title ? title : 'WARNING'\r\n\t};\r\n}\r\nfunction error(message, title) {\r\n\treturn {\r\n\t\ttype: alertConstants.ERROR,\r\n\t\tmessage,\r\n\t\ttitle: title ? title : 'ERROR'\r\n\t};\r\n}\r\nfunction clear() {\r\n\treturn { type: alertConstants.CLEAR };\r\n}\r\n","import React from 'react';\r\n\r\nconst AppContext = React.createContext({});\r\nAppContext.displayName = 'AppContext';\r\n\r\nexport default AppContext;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst styles = theme => ({\r\n\tprogress: {\r\n\t\tmargin: theme.spacing(2)\r\n\t},\r\n\tgeneralCenter: {\r\n\t\tposition: 'absolute',\r\n\t\ttop: '50%',\r\n\t\tleft: '50%',\r\n\t\tmarginTop: '-40px',\r\n\t\tmarginLeft: '-40px'\r\n\t}\r\n});\r\n\r\nfunction LoadingCircle(props) {\r\n\tconst { classes, generalCenter } = props;\r\n\r\n\treturn (\r\n\t\t<div className={generalCenter && classes.generalCenter}>\r\n\t\t\t<CircularProgress className={classes.progress} />\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default withStyles(styles)(LoadingCircle);\r\n","import axios from 'axios';\r\nimport React, { useState } from 'react';\r\n\r\nconst recoverToken = () => {\r\n\r\n}\r\n\r\nconst axiosManager = axios.create({\r\n    // baseURL: 'http://localhost:3031/api', \r\n    baseURL: `${process.env.REACT_APP_API_HOST}/api`,\r\n    headers: {\r\n        'phonelicence': JSON.parse(localStorage.getItem('phonelicence'))\r\n    }\r\n});\r\n\r\nconst baseService = {\r\n    GW: {\r\n        get: (url, params) => axiosManager.get(url, params),\r\n        post: (url, data, params) => axiosManager.post(url, data, params),\r\n        put: (url, data, params) => axiosManager.put(url, data, params),\r\n        delete: (url, params) => axiosManager.delete(url, params),\r\n        all: requests => axios.all(requests).then(results => results.map(r => r.data))\r\n    },\r\n    refreshToken: '',\r\n    setHeaders: token => {\r\n        localStorage.setItem('phonelicence', token);\r\n        axiosManager.defaults.headers = {\r\n            'phonelicence': JSON.parse(localStorage.getItem('phonelicence'))\r\n        };\r\n    }\r\n};\r\n\r\nexport default baseService;\r\n"],"sourceRoot":""}